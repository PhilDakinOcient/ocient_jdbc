create mlmodel model1 type simple linear regression on (select l_quantity, l_extendedprice from tpch.lineitem) /* definite */ ;
create mlmodel model1 type simple linear regression on (select l_quantity, l_extendedprice from tpch.lineitem) /* alrdyext */ ;
drop mlmodel model1 /* definite */ ;
drop mlmodel model1 /* notfound */ ;
create mlmodel model1 type simple linear regression on (select l_quantity, l_extendedprice from tpch.lineitem) options('metrics' -> 'true') /* definite */ ;
drop mlmodel model1 /* definite */ ;
create mlmodel model1 type simple linear regression on (select l_quantity, l_extendedprice from tpch.lineitem) options('metrics' -> 'true', 'yIntercept' -> '0') /* definite */ ;
drop mlmodel model1 /* definite */ ;
create mlmodel model1 type simple linear regression on (select l_quantity, l_extendedprice from tpch.lineitem) options('yIntercept' -> '0') /* definite */ ;
select model1(l_quantity) from tpch.lineitem /* definite */ ;
select model1(l_quantity) - l_extendedprice as error from tpch.lineitem /* definite */ ;
select abs(model1(l_quantity) - l_extendedprice) as l1_error from tpch.lineitem /* definite */ ;
select model1(9) from tpch.lineitem /* definite */ ;
select model1(int(9)) from tpch.lineitem /* definite */ ;
select model1(l_quantity + l_extendedprice) from tpch.lineitem /* definite */ ;
select model1(abs(l_quantity)) from tpch.lineitem /* definite */ ;
create mlmodel my_model type multiple linear regression on (select l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey, l_linenumber from tpch.lineitem) /* definite */ ;
drop mlmodel my_model /* definite */ ;
create mlmodel my_model type multiple linear regression on (select l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey, l_linenumber from tpch.lineitem) options('metrics' -> 'true') /* definite */ ;
drop mlmodel my_model /* definite */ ;
create mlmodel my_model type multiple linear regression on (select l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey, l_linenumber from tpch.lineitem) options('metrics' -> 'true', 'gamma' -> '{{1,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,0,1,0,0,0},{0,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,1}}') /* definite */ ;
drop mlmodel my_model /* definite */ ;
create mlmodel my_model type multiple linear regression on (select l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey, l_linenumber from tpch.lineitem) options('gamma' -> '{{1,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0},{0,0,1,0,0,0,0,0},{0,0,0,1,0,0,0,0},{0,0,0,0,1,0,0,0},{0,0,0,0,0,1,0,0},{0,0,0,0,0,0,1,0},{0,0,0,0,0,0,0,1}}') /* definite */ ;
select my_model(l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey) from tpch.lineitem /* definite */ ;
select my_model(l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey) - l_linenumber as error from tpch.lineitem /* definite */ ;
select abs(my_model(l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey) - l_linenumber) as l1_error from tpch.lineitem /* definite */ ;
select abs(my_model(l_tax, l_discount, l_extendedprice, l_quantity, l_orderkey, l_partkey, l_suppkey) - l_linenumber) + abs(model1(l_quantity) - l_extendedprice) as combined_error from tpch.lineitem /* definite */ ;
select my_model(0, 0, 0, 0, 0, 0, 0) from tpch.lineitem /* definite */ ;
select my_model(0, l_discount, 0, l_quantity, 0, 0, 0) from tpch.lineitem /* definite */ ;
select my_model(0, abs(l_discount), abs(0), l_quantity, 0, 0, 0) from tpch.lineitem /* definite */ ;
drop mlmodel my_model /* definite */ ;
drop mlmodel model1 /* definite */ ;
